package screenSearch;

import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.awt.Color;

public class Paladium extends DifineColors {
	protected Rectangle rect = new Rectangle(Toolkit.getDefaultToolkit().getScreenSize());

	private Point p = new Point(rect.width / 2 - 400, 100);
	private Point size = new Point(800, rect.height / 2 + 200);
	private Rectangle rect1 = new Rectangle(p.x, p.y, size.x, size.y);
	private BufferedImage areaSearchPallie;

	protected Point palliePoint;

	public boolean findPaladium() {
		areaSearchPallie = img.screanImage(rect1);
		for (int y = areaSearchPallie.getHeight() - 60; y > 0; y -= 2) {
			for (int x = areaSearchPallie.getWidth() - 60; x > 0; x--) {
				if (colorSimPalie(new Color(areaSearchPallie.getRGB(x, y)))
						&& colorSimPalie(new Color(areaSearchPallie.getRGB(x, y + 5)))) {
					if (x > 31 && y > 6 && x < areaSearchPallie.getWidth() - 60
							&& y < areaSearchPallie.getHeight() - 58) {
						if (thisPaliePic(areaSearchPallie.getSubimage(x - 30, y - 5, 60, 60))) {
							palliePoint = new Point(x + p.x, y + p.y);
							con.rightClk(palliePoint);
							// System.out.println(new Point(x+p.x,y+p.y));
							return true;
						}
					}
				}
			}
		}

		return false;
	}

	private boolean thisPaliePic(BufferedImage imPalie) {
		
		for (int y = 0; y < imPalie.getHeight(); y++) {
			for (int x = 0; x < imPalie.getWidth(); x++) {
				if (y == 1 || y == 2 || y == 59 || y == 60 || x == 1 ||x == 0 || x == 2 || x == 3 || x == 59) {

					if (this.backGround(new Color(imPalie.getRGB(x, y)))) {

					} else {
						return false;
					}
				}
				if (this.colorSimPalie(new Color(imPalie.getRGB(x, y)))) {
					
					// System.out.println(numberpalColors);
				}
			}
		}
		// System.out.println("work");

		return true;

	}

}
